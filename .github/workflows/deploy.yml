name: Build and Deploy to Google Cloud Run

on:
  push:
    branches:
      - dev
      - main

permissions:
  id-token: write
  contents: read

jobs:
  execute-code-quality-validation:
    uses: ./.github/workflows/validate.yml
    with:
      branches: "dev"
      eslint-enable: false
      unit-test-enable: true
    secrets:
      token: ${{ secrets.GH_TOKEN }}

  execute-release:
    needs: execute-code-quality-validation
    uses: ./.github/workflows/release.yml
    with:
      branches: "${{ github.ref_name }}"
      slack_enabled: true
    secrets:
      token: ${{ secrets.GH_TOKEN }}
      slack_webhook: ${{ secrets.SLACK_WEBHOOK }}
  deploy:
    #  needs: execute-release
     runs-on: ubuntu-latest
     if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
     steps:
       - name: Checkout code
         uses: actions/checkout@v4
         with:
           fetch-depth: 0 

       - name: Set Branch Name
         id: branch_name
         run: echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

       - name: Set Latest Tag
         id: set_latest_tag
         run: |
           LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v1.0.0")
           echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV
           echo "Latest tag is ${{ env.LATEST_TAG }}"

       - name: Authenticate to Azure
         uses: azure/login@v2
         with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        
       - name: Login Azure Container Registry
         run: az acr login --name ${{ secrets.ACR_NAME }}

       - name: Build Docker Image
         run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/api:latest .

       - name: Push Docker Image
         run: |
            docker push ${{ secrets.ACR_NAME }}.azurecr.io/api:latest
         
       - name: Deploy Azure Container Instances
         run: |
              az container create \
                --resource-group pohlmanprotean \
                --name ${{ env.BRANCH_NAME }}-az-api-pohlmanprotean \
                --image ${{ secrets.ACR_NAME }}.azurecr.io/api:latest \
                --registry-login-server ${{ secrets.ACR_NAME }}.azurecr.io \
                --os-type Linux \
                --cpu 1 \
                --memory 1 \
                --registry-username $(az acr credential show --name ${{ secrets.ACR_NAME }} --query "username" --output tsv) \
                --registry-password $(az acr credential show --name ${{ secrets.ACR_NAME }} --query "passwords[0].value" --output tsv) \
                --dns-name-label ${{ env.BRANCH_NAME }}-pohlmanprotean-dns \
                --ports 8080